import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	static int N;
	static int[][] map, count;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		N = Integer.parseInt(br.readLine());
		map = new int[N][N];
		count = new int[N][N];
		
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < N; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());	
			}
		}
		
		dfs(0, 1, 0);
		System.out.println(count[N-1][N-1]);
	}

	// dir - 0: 가로, 1: 대각선, 2: 세로
	public static void dfs(int r, int c, int dir) {
		
		if(r>=N || c>=N || map[r][c]==1) return;
        
        if(dir == 0) {
            dfs(r,c+1,0);
            dfs(r+1,c+1,1);
            
        } else if( dir==1 ) {
            if (map[r-1][c]==1 || map[r][c-1]==1) return;
            dfs(r,c+1,0);
            dfs(r+1,c+1,1);
            dfs(r+1,c,2);
            
        } else {
            dfs(r+1,c+1,1);
            dfs(r+1,c,2);
        }
        count[r][c]++;
	}
}
